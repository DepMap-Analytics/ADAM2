% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ADAM.R
\name{ADAM2.PercentileCF}
\alias{ADAM2.PercentileCF}
\title{Calculate the Core Fitness genes using the  90th-percentile least dependent cell line from Quantative knockout screen dependency matrix.}
\usage{
ADAM2.PercentileCF(depMat,
             display=TRUE,
             percentile=0.9,
             prefix='PercentileMethod')
}
\arguments{
\item{depMat}{Quantative knockout screen dependency matrix where rows are genes and columns are samples. A real number in position \emph{[i,j]} represents the strength of dependency which indicates the amaount of loss of fitness in the \emph{j}-th sample in case of the inactivation of the \emph{i}-th gene. Higher strength of dependency indicates higher probability of beign a core fitness gene. These values are used for ranking the genes in terms of their dependecy strength.}

\item{display}{Boolean, default is TRUE. Should bar plots of the dependency profiles be plotted}

\item{percentile}{percentage of the cell lines where the given gene should show depletion. The default value is 0.9 indicating 90-th percentile least dependent cell line.}

\item{prefix}{if the display is false the plots are generated in the working directory using the prefix.}
}
\value{
A list of the following vectors:
\item{cfgenes}{Vector of number of genes that are core fitness genes}
\item{LeastDependent}{A dataframe where each row corresponds to a gene.There are two columns: \emph{Value} stores the rank of the gene at the \emph{N}-th percentile least dependent cell line and the \emph{Gene} stores the gene name}
\item{threshold}{The rank threshold for core fitness genes}
}
\description{
This function identifies the Core Fitness genes from a given Quantative knockout screen dependency matrix where each row is gene and each column the cell line. The function uses all the cell lines and identifies the genes that are essential in majority of the cell lines.
}
\details{
This function implements the idea that if a gene is essential then it should fall in the top Z most depleted genes in at least 90% of cell lines. Here the threshold Z is calculated in a data driven way.
For a given gene, we can rank its gene effect score in each cell line, then arrange cell lines in order of increasing gene effect score for that gene. This creates a bimodal distribution of gene ranks in their 90th-percentile least depleted lines.
Z is choosen as the minimum density between the two normal distributions that are estimated from these ranks. All genes with rank less than this threshold in their 90th percentile cell lines are reported
}
\examples{
data(exampleSBFData)
results <- ADAM2.PercentileCF(depMat=exampleSBFData,display=TRUE)
cfgenes <- results$cfgenes
}
\author{
C. Pacini, E. Karakoc & F. Iorio
}
\keyword{functions}
