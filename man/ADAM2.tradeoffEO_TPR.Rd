% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ADAM.R
\name{ADAM2.tradeoffEO_TPR}
\alias{ADAM2.tradeoffEO_TPR}
\title{Calculate ADAM model threshold}
\usage{
ADAM2.tradeoffEO_TPR(EO,
                    TPR,
                    test_set_name)
}
\arguments{
\item{EO}{Profile of empirical odds values. Computed with the \code{ADAM2.empiricalOdds} function.}

\item{TPR}{Profile of True positive rates for across number of cell line. Computed with the \code{ADAM2.truePositiveRate} function.}

\item{test_set_name}{Name to give to the analysis, used for plotting titles.}
}
\value{
ADAM model threshold:
\item{point}{Number of cell lines for which a gene needs to be a fitness gene in order to be predicted as core-fitness gene.}
}
\description{
This function finds the minimum number of cell lines in which a gene needs to be fitness in order to be called core-fitness. This is defined as the \emph{n} providing the best trade-off between i) coverage of priori-known essential genes in the resulting set of predicted core-fitness genes, i.e. fitness in at least \emph{n} cell lines, and ii) deviance from expectation of the number of fitness genes in \emph{n} cell lines.
}
\details{
Compare and plot the log10 odds ratios with the true positive rates to find the cross over point where the true positive rate falls below the odds ratio.
}
\examples{
#load in example binary depletion matrix
data(exampleDepMat)

# Generate the profiles of number of fitness genes across number of cell lines from
# observed data and corresponding comulative sums.
pprofile<-ADAM2.panessprofile(depMat=exampleDepMat)

# Generate a set of random profiles of number of genes depleted for a number of cell lines
# and corresponding cumulative sums by perturbing observed data.
nullmodel<-ADAM2.generateNullModel(depMat=exampleDepMat,ntrials = 1000)

#load a reference set of essential genes
data(curated_BAGEL_essential)

# Calculate log10 odd ratios of observed/expected profiles of cumulative number of fitness
# genes in fixed number of cell lines.
# Observed values are from the ADAM.panessprofile function and expected are the average of
# random set from ADAM2.generateNullModel
EO<-ADAM2.empiricalOdds(observedCumSum = pprofile$CUMsums,simulatedCumSum =nullmodel$nullCumSUM )

# Calculate True positive rates for fitness genes in at least n cell lines in the observed
# dependency matrix, with positive cases from a reference set of essential genes
TPR<-ADAM2.truePositiveRate(exampleDepMat,curated_BAGEL_essential)

# Calculate minimum number of cell lines a gene needs to be a fitness gene in order to
# be considered as a core-fitness gene
crossoverpoint<-ADAM2.tradeoffEO_TPR(EO,TPR$TPR,test_set_name = 'curated BAGEL essential')
}
\seealso{
\code{\link{ADAM2.empiricalOdds}},
\code{\link{ADAM2.truePositiveRate}}
}
\author{
C. Pacini, E. Karakoc & F. Iorio
}
\keyword{functions}
